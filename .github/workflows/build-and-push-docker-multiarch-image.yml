---

name: Container Image Build and Push - CI Workflow

'on':
  workflow_run:
    workflows: ["Scheduled scan of container images for vulnerabilities"]
    types:
      - completed
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

env:
  DOCKER_IMAGE: network-multitool
  DOCKERHUB_ORGNAME: xanmanning
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}

jobs:
  scan:
    name: trivy scan
    runs-on: ubuntu-latest
    if: github.ref_name != 'main'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build container image
        run: |
          docker build \
            --build-arg INSTALL_EXTRAS=true \
            -t localhost/${{ env.DOCKER_IMAGE }}:${{ github.sha }} .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: localhost/${{ env.DOCKER_IMAGE }}:${{ github.sha }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

  build-and-push-multi-arch-container-image:
    name: build and push multi-arch container image
    runs-on: ubuntu-latest
    if: github.event.ref == 'refs/heads/main' || github.event.workflow_run.conclusion == 'failure'
    strategy:
      fail-fast: false
      matrix:
        install_extras:
          - true
          - false
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare Container Image Tags
        id: prep
        run: |
          SHORT_REF=$(basename ${GITHUB_REF})
          SHORT_HASH=${GITHUB_SHA::7}
          EXTRAS_SUFFIX=""
          TAGS=""
          if [[ "${{ matrix.install_extras }}" == "true" ]] ; then
            EXTRAS_SUFFIX="-extras"
          fi
          if [[ -n "${SHORT_REF}" && "${SHORT_REF}" == "main" && -z "${EXTRAS_SUFFIX}" ]] ; then
            echo "Found git commit on main branch. Setting container image tag as: 'latest'"
            TAG="${DOCKERHUB_ORGNAME}/${DOCKER_IMAGE}:latest"
          fi
          if [[ -n "${SHORT_REF}" && "${SHORT_REF}" == "main" && -n "${EXTRAS_SUFFIX}" ]] ; then
            echo "Found git commit on main branch. Setting container image tag as: 'extras'"
            TAG="${DOCKERHUB_ORGNAME}/${DOCKER_IMAGE}:extras"
          fi
          if [[ -n "${SHORT_REF}" && "${SHORT_REF}" != "main" ]] ; then
            echo "Setting container image tag as: '${SHORT_REF}${EXTRAS_SUFFIX}'"
            TAG="${DOCKERHUB_ORGNAME}/${DOCKER_IMAGE}:${SHORT_REF}${EXTRAS_SUFFIX}"
          fi
          TAGS="${TAG},${DOCKERHUB_ORGNAME}/${DOCKER_IMAGE}:${SHORT_HASH}${EXTRAS_SUFFIX}"
          echo "Complete Container image-name and tags are setup as: ${TAGS}"
          echo "::set-output name=tags::${TAGS}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        if: github.ref_name == 'main'
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          build-args: |
            INSTALL_EXTRAS=${{ matrix.install_extras }}
          platforms: linux/amd64,linux/arm64,linux/ppc64le
          push: true
          tags: ${{ steps.prep.outputs.tags }}
